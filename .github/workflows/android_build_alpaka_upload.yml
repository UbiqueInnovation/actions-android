name: Build and Upload to Alpaka

on:
  workflow_call:
    inputs:
      flavor:
        type: string
        required: true
      appModule:
        type: string
        required: false
        default: 'app'
      concurrencyGroup:
        type: string
        required: false
        default: ${{ github.workflow }}-${{ github.ref }}
      workingDirectory:
        type: string
        default: './'
        required: false
        description: 'The working directory of the script, for projects where the gradle project is not in the root folder. Must end with a slash.'
      cacheKeyPrefix:
        type: string
        required: false
        default: ${{ github.repository }}
      self_hosted_cache_endpoint:
        required: false
        default: 'truenas.local.lan'
        type: string
        description: Should be set for selfhosted builds, but build won't fail without it
      self_hosted_cache_port:
        required: false
        default: 9001
        type: number
      self_hosted_cache_bucket:
        required: false
        default: github-actions-cache
        type: string
      self_hosted_cache_region:
        required: false
        default: local
        type: string
      setup_rust_tool_chain:
        required: false
        default: false
        type: boolean
      runs-on:
        type: string
        required: false
        default: '["k8s-runner"]'
      jdk:
        type: string
        required: false
        default: '17'
        description: The JDK version to use. Default is 17.
      android_image_version:
        type: string
        required: false
        default: '2024.04.1-ndk'
        description: The Android image version to use. Default is 2024.04.1-ndk.
      sentry_log_level:
        type: string
        required: false
        default: 'warn'
        description: 'The Sentry log level to use. Default is "warn". Other options are "trace", "debug", "info" and "error"'
      PRE_BUILD_SCRIPT:
        required: false
        type: string
        description: 'bash script that is executed before the actual build'
    secrets:
      ANDROID_JENKINS_PAT:
        required: true
      UB_ARTIFACTORY_URL_ANDROID:
        required: true
      UB_ARTIFACTORY_USER:
        required: true
      UB_ARTIFACTORY_PASSWORD:
        required: true
      ALPAKA_UPLOAD_KEY:
        required: false
      UBIQUE_POEDITOR_API_KEY:
        required: false
      ADDITIONAL_GRADLE_PROPS:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false
      SSH_KEY:
        description: 'SSH key to import'
        required: false
      self_hosted_cache_access_key:
        required: false
        description: Must be set to use selfhosted cache
      self_hosted_cache_secret_key:
        required: false

jobs:
  build:
    name: Build ${{ inputs.flavor }} Flavor
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    container:
      image: cimg/android:${{ inputs.android_image_version }}
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}
    timeout-minutes: 60
    concurrency:
      # Cancel any previous runs that have not yet finished for the configured concurrency group
      group: ${{ inputs.concurrencyGroup }}
      cancel-in-progress: true
    steps:
      # Checkout repository and submodules
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.ANDROID_JENKINS_PAT }}
          submodules: 'recursive'
          lfs: 'true'
          fetch-depth: 10

      - name: "Add SSH Key"
        uses: webfactory/ssh-agent@dc588b651fe13675774614f8e6a936a468676387
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      # Run prebuild script
      - name: "Pre Build Script"
        if: ${{ inputs.PRE_BUILD_SCRIPT }}
        run: ${{ inputs.PRE_BUILD_SCRIPT }}

      # Set build variables for reuse in multiple steps
      - name: Set Build Variables
        id: vars
        shell: bash
        run: |
          flavor=${{ inputs.flavor }}
          echo "flavor_capitalized=${flavor~}" >> "$GITHUB_OUTPUT"
          
          buildBatch=${{ github.run_id }}
          echo "build_batch=$buildBatch" >> "$GITHUB_OUTPUT"
          
          buildId=$(cat /proc/sys/kernel/random/uuid)
          echo "build_id=$buildId" >> "$GITHUB_OUTPUT"
          
          buildNumber=${{ github.run_number }}
          echo "build_number=$buildNumber" >> "$GITHUB_OUTPUT"

      - name: write build_id to file
        run: echo "${{ steps.vars.outputs.build_id }}" > build_id.txt

      - name: upload build_id as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.flavor }}_build_id
          path: ${{ inputs.workingDirectory }}/build_id.txt

      # Setup JDK environment
      - name: Set up JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.jdk }}

      - name: Install zstd
        run: sudo apt-get install -y zstd

      - name: Cache Gradle packages on self-hosted MinIO
        uses: tespkg/actions-cache@v1.7.1
        if: false # Disabled for now to test if it's faster without it
        with:
          endpoint: ${{ inputs.self_hosted_cache_endpoint }}
          port: ${{ inputs.self_hosted_cache_port }}
          insecure: true
          accessKey: ${{ secrets.self_hosted_cache_access_key }}
          secretKey: ${{ secrets.self_hosted_cache_secret_key }}
          bucket: ${{ inputs.self_hosted_cache_bucket }}
          region: ${{ inputs.self_hosted_cache_region }}
          use-fallback: true
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: cimg-android-${{ inputs.cacheKeyPrefix }}-${{inputs.flavor}}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            cimg-android-${{ inputs.cacheKeyPrefix }}-gradle-

      # Setup rust Tool Chain
      - name: Setup rust Tool Chain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        if: ${{ inputs.setup_rust_tool_chain }}

      # Build and upload app to Alpaka
      - name: Build app
        uses: gradle/actions/setup-gradle@v3.1.0
        with:
          cache-disabled: true
          build-root-directory: ${{ inputs.workingDirectory }}
          arguments: |
            :${{ inputs.appModule }}:clean :${{ inputs.appModule }}:uploadToAlpaka${{ steps.vars.outputs.flavor_capitalized }}Release
            -PubiqueMavenUrl=${{ secrets.UB_ARTIFACTORY_URL_ANDROID }}
            -PubiqueMavenUser=${{ secrets.UB_ARTIFACTORY_USER }}
            -PubiqueMavenPass=${{ secrets.UB_ARTIFACTORY_PASSWORD }}
            -PubiquePoEditorAPIKey=${{ secrets.UBIQUE_POEDITOR_API_KEY }}
            -Pbuild_batch=${{ steps.vars.outputs.build_batch }}
            -Pbuild_id=${{ steps.vars.outputs.build_id }}
            -Pbuild_number=${{ steps.vars.outputs.build_number }}
            -Pbranch=${{ github.ref_name }}
            -PcommitHash=${{ github.sha }}
            ${{ secrets.ADDITIONAL_GRADLE_PROPS }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_LOG_LEVEL: ${{ inputs.sentry_log_level }}
          ALPAKA_UPLOAD_KEY: ${{ secrets.ALPAKA_UPLOAD_KEY }}

      # Write Alpaka build info to GitHub job summary
      - name: Alpaka Build Summary
        run: |
          echo '### Alpaka Build Info' >> $GITHUB_STEP_SUMMARY
          echo 'Build Batch: ${{ steps.vars.outputs.build_batch }}' >> $GITHUB_STEP_SUMMARY
          echo 'Build ID: ${{ steps.vars.outputs.build_id }}' >> $GITHUB_STEP_SUMMARY
          echo 'Build Number: ${{ steps.vars.outputs.build_number }}' >> $GITHUB_STEP_SUMMARY

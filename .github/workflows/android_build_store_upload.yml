name: Build and Upload to Play Store

on:
  workflow_call:
    inputs:
      flavor:
        type: string
        required: true
      appModule:
        type: string
        required: false
        default: 'app'
      setup_rust_tool_chain:
        required: false
        default: false
        type: boolean
      runs-on:
        type: string
        required: false
        default: '["k8s-runner"]'
    secrets:
      ANDROID_JENKINS_PAT:
        required: true
      UB_ARTIFACTORY_URL_ANDROID:
        required: true
      UB_ARTIFACTORY_USER:
        required: true
      UB_ARTIFACTORY_PASSWORD:
        required: true
      UBIQUE_POEDITOR_API_KEY:
        required: true
      ADDITIONAL_GRADLE_PROPS:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false
      UPLOAD_KEY_STORE_PASSWORD:
        required: true
      UPLOAD_KEY_PASSWORD:
        required: true
      ANDROID_PUBLISHER_CREDENTIALS:
        required: true

jobs:
  build:
    name: Build ${{ inputs.flavor }} Flavor
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    container:
      image: cimg/android:2024.04.1-ndk
    timeout-minutes: 60
    concurrency:
      # Cancel any previous runs that have not yet finished for this workflow, git ref and app module (for apps that have multiple apps in the same workflow)
      group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.appModule }}
      cancel-in-progress: true
    steps:
      # Checkout repository and submodules
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.ANDROID_JENKINS_PAT }}
          submodules: 'recursive'
          lfs: 'true'

      # Set build variables for reuse in multiple steps
      - name: Set Build Variables
        id: vars
        shell: bash
        run: |
          flavor=${{ inputs.flavor }}
          echo "flavor_capitalized=${flavor~}" >> "$GITHUB_OUTPUT"

      # Setup JDK environment
      - name: Set up JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'zulu'
          java-version: '17'

      # Setup rust Tool Chain
      - name: Setup rust Tool Chain
        uses: actions-rust-lang/setup-rust-toolchain@v1.9.0
        if: ${{ inputs.setup_rust_tool_chain }}

      # Setup the build environment with Gradle
      - name: Build app
        uses: gradle/actions/setup-gradle@v3.1.0
        with:
          arguments: |
            :${{ inputs.appModule }}:bundle${{ steps.vars.outputs.flavor_capitalized }}ReleaseUpload
            -PubiqueMavenUrl=${{ secrets.UB_ARTIFACTORY_URL_ANDROID }}
            -PubiqueMavenUser=${{ secrets.UB_ARTIFACTORY_USER }}
            -PubiqueMavenPass=${{ secrets.UB_ARTIFACTORY_PASSWORD }}
            -PubiquePoEditorAPIKey=${{ secrets.UBIQUE_POEDITOR_API_KEY }}
            ${{ secrets.ADDITIONAL_GRADLE_PROPS }}
        env:
          UPLOAD_KEY_STORE_PASSWORD: ${{ secrets.UPLOAD_KEY_STORE_PASSWORD }}
          UPLOAD_KEY_PASSWORD: ${{ secrets.UPLOAD_KEY_PASSWORD }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Save app artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle
          path: |
            **/${{ inputs.appModule }}/build/outputs/**/*.aab

      - name: Upload app artifact
        uses: gradle/actions/setup-gradle@v3.1.0
        with:
          arguments: |
            :${{ inputs.appModule }}:publish${{ steps.vars.outputs.flavor_capitalized }}ReleaseUploadBundle --artifact-dir ${{ inputs.appModule }}/build/outputs/bundle/${{ inputs.flavor }}ReleaseUpload
            -PubiqueMavenUrl=${{ secrets.UB_ARTIFACTORY_URL_ANDROID }}
            -PubiqueMavenUser=${{ secrets.UB_ARTIFACTORY_USER }}
            -PubiqueMavenPass=${{ secrets.UB_ARTIFACTORY_PASSWORD }}
            -PubiquePoEditorAPIKey=${{ secrets.UBIQUE_POEDITOR_API_KEY }}
            ${{ secrets.ADDITIONAL_GRADLE_PROPS }}
        env:
          ANDROID_PUBLISHER_CREDENTIALS: ${{ secrets.ANDROID_PUBLISHER_CREDENTIALS }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

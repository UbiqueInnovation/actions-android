name: Build and Upload to UBDiag

on:
  workflow_call:
    inputs:
      projectKey:
        type: string
        required: true
      app:
        type: string
        required: true
      flavor:
        type: string
        required: true
      appModule:
        type: string
        required: false
        default: "app"
      concurrencyGroup:
        type: string
        required: false
        default: ${{ github.workflow }}-${{ github.ref }}
      workingDirectory:
        type: string
        default: "./"
        required: false
        description: "The working directory of the script, for projects where the gradle project is not in the root folder. Must end with a slash."
      self_hosted_cache_endpoint:
        required: false
        default: "truenas.local.lan"
        type: string
        description: Should be set for selfhosted builds, but build won't fail without it
      self_hosted_cache_port:
        required: false
        default: 9000
        type: number
      self_hosted_cache_bucket:
        required: false
        default: github-actions-cache
        type: string
      self_hosted_cache_region:
        required: false
        default: local
        type: string
    secrets:
      ANDROID_JENKINS_PAT:
        required: true
      UB_ARTIFACTORY_URL_ANDROID:
        required: true
      UB_ARTIFACTORY_USERNAME:
        required: true
      UB_ARTIFACTORY_PASSWORD:
        required: true
      UBIQUE_POEDITOR_API_KEY:
        required: false
      UBDIAG_UPLOAD_URL:
        required: true
      ADDITIONAL_GRADLE_PROPS:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false
      self_hosted_cache_access_key:
        required: false
        description: Must be set to use selfhosted cache
      self_hosted_cache_secret_key:
        required: false

jobs:
  build:
    name: Build ${{ inputs.flavor }} Flavor
    runs-on: ["k8s-runner"]
    container:
      image: cimg/android:2024.04.1
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}
    timeout-minutes: 60
    concurrency:
      # Cancel any previous runs that have not yet finished for the configured concurrency group
      group: ${{ inputs.concurrencyGroup }}
      cancel-in-progress: true
    steps:
      # Checkout repository and submodules
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.ANDROID_JENKINS_PAT }}
          submodules: "recursive"
          lfs: "true"

      # Set build variables for reuse in multiple steps
      - name: Set Build Variables
        id: vars
        shell: bash
        run: |
          flavor=${{ inputs.flavor }}
          buildUuid=$(cat /proc/sys/kernel/random/uuid)
          webIconPath=$GITHUB_WORKSPACE/${{ inputs.workingDirectory }}/${{ inputs.appModule }}/tmp_icon_large_for_backend.png
          echo "build_uuid=$buildUuid" >> "$GITHUB_OUTPUT"
          echo "web_icon=$webIconPath" >> "$GITHUB_OUTPUT"
          echo "flavor_capitalized=${flavor~}" >> "$GITHUB_OUTPUT"

      # Setup JDK environment
      - name: Set up JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Install zstd
        run: sudo apt-get install -y zstd

      - name: Cache Gradle packages on self-hosted MinIO
        uses: tespkg/actions-cache@v1.7.1
        with:
          endpoint: ${{ inputs.self_hosted_cache_endpoint }}
          port: ${{ inputs.self_hosted_cache_port }}
          insecure: true
          accessKey: ${{ secrets.self_hosted_cache_access_key }}
          secretKey: ${{ secrets.self_hosted_cache_secret_key }}
          bucket: ${{ inputs.self_hosted_cache_bucket }}
          region: ${{ inputs.self_hosted_cache_region }}
          use-fallback: true
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: cimg-android-${{ inputs.projectKey }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            cimg-android-${{ inputs.projectKey }}-gradle-

      # Setup the build environment with Gradle
      - name: Build app
        uses: gradle/actions/setup-gradle@v3.1.0
        with:
          cache-disabled: true
          build-root-directory: ${{ inputs.workingDirectory }}
          arguments: |
            :${{ inputs.appModule }}:assemble${{ steps.vars.outputs.flavor_capitalized }}Release
            -PubiqueMavenUrl=${{ secrets.UB_ARTIFACTORY_URL_ANDROID }}
            -PubiqueMavenUser=${{ secrets.UB_ARTIFACTORY_USERNAME }}
            -PubiqueMavenPass=${{ secrets.UB_ARTIFACTORY_PASSWORD }}
            -PubiquePoEditorAPIKey=${{ secrets.UBIQUE_POEDITOR_API_KEY }}
            -Pbranch=${{ github.ref_name }}
            -Pbuildnumber=${{ github.run_number }}
            -Pubappid=${{ steps.vars.outputs.build_uuid }}
            -Pwebicon=${{ steps.vars.outputs.web_icon }}
            ${{ secrets.ADDITIONAL_GRADLE_PROPS }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      # Upload to UBDiag
      - name: Upload build to UBDiag
        uses: UbiqueInnovation/ubdiag-upload-action@v1.1.2
        with:
          buildNumber: ${{ github.run_number }}
          projectKey: ${{ inputs.projectKey }}
          flavor: ${{ inputs.flavor }}
          app: ${{ inputs.app }}
          appModuleDirectory: "${{ inputs.workingDirectory }}${{ inputs.appModule }}"
          buildUuid: ${{ steps.vars.outputs.build_uuid }}
          webIconFile: tmp_icon_large_for_backend.png
          backendEndpoint: ${{ secrets.UBDIAG_UPLOAD_URL }}
          self_hosted_cache_access_key: ${{ secrets.self_hosted_cache_access_key }}
          self_hosted_cache_secret_key: ${{ secrets.self_hosted_cache_secret_key }}

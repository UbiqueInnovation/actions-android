name: Build and Upload to UBDiag

on:
  workflow_call:
    inputs:
      projectKey:
        type: string
        required: true
      app:
        type: string
        required: true
      flavor:
        type: string
        required: true
      appModuleDirectory:
        type: string
        required: false
        default: './app'
    secrets:
      ANDROID_JENKINS_PAT:
        required: true
      UB_ARTIFACTORY_URL_ANDROID:
        required: true
      UB_ARTIFACTORY_USERNAME:
        required: true
      UB_ARTIFACTORY_PASSWORD:
        required: true
      UBIQUE_POEDITOR_API_KEY:
        required: true
      UBDIAG_UPLOAD_URL:
        required: true
      ADDITIONAL_GRADLE_PROPS:
        required: false

jobs:
  build:
    name: Build ${{ inputs.flavor }} Flavor
    runs-on: ubuntu-latest
    steps:
      # Checkout repository and submodules
      - name: Checkout
        uses: actions/checkout@v2.3.5
        with:
          token: ${{ secrets.ANDROID_JENKINS_PAT }}
          submodules: 'recursive'

      # Set build variables for reuse in multiple steps
      - name: Set Build Variables
        id: vars
        run: |
          flavor=${{ inputs.flavor }}
          echo ::set-output name=build_uuid::$(cat /proc/sys/kernel/random/uuid)
          echo ::set-output name=web_icon::${{ github.workspace }}/${{ inputs.appModuleDirectory }}/tmp_icon_large_for_backend.png
          echo ::set-output name=flavor_capitalized::${flavor~}

      # Setup the build environment with Java 11 and the Zulu OpenJDK
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      # Install Imagemagick for our UBDiag gradle plugin
      # This should be removed once the plugin does not require imagemagick anymore
      - name: Install Imagemagick
        run: sudo apt-get install -y imagemagick

      # Setup the build environment with Gradle
      - name: Build app
        uses: gradle/gradle-build-action@v2
        with:
          # Cache entries are not shared among branches. To reduce the amount of cache writes, only allow the main branch to write cache entries and let other branches read them
          # https://github.com/gradle/gradle-build-action#only-write-to-the-cache-from-the-default-branch
          cache-read-only: ${{ github.ref_name != 'develop' }}
          arguments: |
            assemble${{ steps.vars.outputs.flavor_capitalized }}Release
            test${{ steps.vars.outputs.flavor_capitalized }}DebugUnitTest
            -PubiqueMavenUrl=${{ secrets.UB_ARTIFACTORY_URL_ANDROID }}
            -PubiqueMavenUser=${{ secrets.UB_ARTIFACTORY_USERNAME }}
            -PubiqueMavenPass=${{ secrets.UB_ARTIFACTORY_PASSWORD }}
            -PubiquePoEditorAPIKey=${{ secrets.UBIQUE_POEDITOR_API_KEY }}
            -Pbranch=${{ github.ref_name }}
            -Pubappid=${{ steps.vars.outputs.build_uuid }}
            -Pwebicon=${{ steps.vars.outputs.web_icon }}
            ${{ secrets.ADDITIONAL_GRADLE_PROPS }}

      # Upload to UBDiag
      - name: Upload build to UBDiag
        uses: UbiqueInnovation/actions-android/ubdiagUpload@feature/actions-customization-improvement
        with:
          buildNumber: ${{ github.run_number }}
          projectKey: ${{ inputs.projectKey }}
          flavor: ${{ inputs.flavor }}
          app: ${{ inputs.app }}
          appModuleDirectory: ${{ inputs.appModuleDirectory }}
          buildUuid: ${{ steps.vars.outputs.build_uuid }}
          webIconFile: tmp_icon_large_for_backend.png
          backendEndpoint: ${{ secrets.UBDIAG_UPLOAD_URL }}

      # Publish test results to pull requests
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@95a3aff882d4abe2838b187c66477be7fbf3ddb8
        with:
          check_name: "Unit Test Results ${{ inputs.flavor }}"
          files: ${{ inputs.appModuleDirectory }}/build/test-results/**/*.xml

      # Upload the test reports to the build artifacts
      - name: Store Test Report in Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-reports-dev
          path: ${{ inputs.appModuleDirectory }}/build/reports